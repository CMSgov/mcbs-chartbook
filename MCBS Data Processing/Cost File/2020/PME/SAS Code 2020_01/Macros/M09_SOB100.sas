*-------------------------------------------------------------|
| THIS CODE CONCATENATES THE ONE TO ONE AND THE MULTICOST     |
| FILES SENT TO US FROM WESTAT AND ATTEMPTS TO DERIVE A       |
| THE PROPER METHODS TO ESTIMATE _TREIM REIMBURSMENT          |
| RAM 'RETAIL' GIVES US                                       |
| THE SOBRULES ARE AS FOLLOWS                                 |
| 100=_NEWRECS=1 _RECSPM=1 _DIFPMS   _PURCHPM=1               |
| 200=_NEWRECS=1 _RECSPM=1 _DIFPMS=1 _PURCHPM>1               |
| 300=_NEWRECS>1=_RECSPM>1 _DIFPMS=1 _PURCHPM>1               |
| 400=_NEWRECS>1=_RECSPM>1=_DIFPMS>1=_PURCHPM>1               |
| 450=_NEWRECS>1=_RECSPM>1=_DIFPMS>1 _PURCHPM>1 AND NE RECSPM |
| 500=_NEWRECS  >_RECSPM                                      |
| 600=_NEWRECS=  _RECSPM=_PURCHPM AND NE _DIFPMS              |
| 700=_NEWRECS=  _RECSPM=_DIFPMS _PURCHPM=MISSING             |
| 800=ALL ARE MISSING                                         |
|-------------------------------------------------------------|
;
/*
PROC SORT DATA=F1HD.SOB100 OUT = DONE; BY _IMPSTAT;
PROC UNIVARIATE; VAR _TREIM; BY _IMPSTAT
*/
/*
PROC PRINT DATA=F1HD.SOB100; WHERE _TREIM<0 AND _TREIM NE .;
PROC UNIVARIATE DATA=F1HD.SOB100; VAR TOTALCHG; TITLE '00';
*HERE TOTALCHG = _TREIM AND _TREIM NE 0;
PROC UNIVARIATE DATA=F199.SOB100; VAR _TREIM; TITLE '99';
*HERE TOTALCHG = _TREIM AND _TREIM NE 0;
PROC UNIVARIATE DATA=F198.SOB100; VAR _TREIM; TITLE '98';
*HERE TOTALCHG = _TREIM AND _TREIM NE 0;
PROC UNIVARIATE DATA=F197.SOB100; VAR _TREIM; TITLE '97';
*HERE TOTALCHG = _TREIM AND _TREIM NE 0;
*/
*PTION OBS=10000;


DATA DRUGS;
SET MCBSDATA.OUTCOMM_Y&CurrYear;
IF _NEWRECS=1 AND _RECSPM=1 AND _DIFPMS=1 AND _PURCHPM=1;
IF BN='ANTIBIOTIC' THEN EVPRICE=.;
SOB='100';
PMROID=BASEID||EVNTNUM||ROUND;
ID=BASEID||EVNTNUM||ROUND||UTILNUM;
*IF ROUND='06' THEN DELETE;
IF _SOPCARE=1 THEN DELETE;
AMTCARE_=_AMTCARE;
AMTCAID_=_AMTCAID;
AMTpHMO_=_AMTpHMO;
AMTVA_=_AMTVA;
AMTPRVE_=_AMTPRVE;
AMTPRVI_=_AMTPRVI;
AMTOOP_=_AMTOOP;
AMTDISC_=_AMTDISC;
AMTOTH_=_AMTOTH;
AMTPD_=_AMTPD;
AMTMA_=_AMTMA;

SOPCARE_=_SOPCARE;
SOPCAID_=_SOPCAID;
SOPpHMO_=_SOPpHMO;
SOPVA_=_SOPVA;
SOPPRVE_=_SOPPRVE;
SOPPRVI_=_SOPPRVI;
SOPOOP_=_SOPOOP;
SOPDISC_=_SOPDISC;
SOPOTH_=_SOPOTH;
SOPPD_=_SOPPD;
SOPMA_=_SOPMA;

PURCHPM_=_PURCHPM;
PMFORM_=PMFORMMC;
RUN;

PROC SORT DATA=DRUGS; BY BN; RUN;

DATA TEMPMERG OUT;
MERGE DRUGS (IN=A) 
      MCBSDATA.AVGEVPR_&CurrYear (IN=B);
BY BN;
IF A;
IF B THEN OUTPUT TEMPMERG;
ELSE OUTPUT OUT;
RUN;


DATA TEMPMERG;
SET TEMPMERG OUT;
IF BN='                              ' THEN AVGEVPR=.;
RUN;
PROC SORT DATA=TEMPMERG;
BY PMROID;
RUN;
DATA A;
SET TEMPMERG;
IF EVPRICE<.5  AND EVPRICE NE . THEN EVPRICE=.5;
RUN;
DATA A;
SET A;
BY PMROID;
RETAIN TMPPMRO '             ';
RETAIN TMPSET 0;
IF NUMLINKS>0 AND NUMSAME<0 THEN TMPSET=1;
IF NUMLINKS<0 AND NUMSAME>0 THEN TMPSET=0;
IF FIRST.PMROID THEN DO;
TMPPMRO=PMROID;
TMPSET=TMPSET;
END;
RUN;
DATA PRI;
SET A;
*IF MARKER=1;
IF TMPSET=1 AND TOTALCHG>0 THEN FIN_CHG=(TOTALCHG/NUMLINKS);
IF TMPSET=0 AND TOTALCHG>0 THEN FIN_CHG=TOTALCHG;
IF TOTALCHG<0 THEN FIN_CHG=.;
RUN;
PROC SORT;
BY PMROID;
RUN;
DATA X;
SET PRI;
MYCARE=_AMTCARE;
MYCAID=_AMTCAID;
MYpHMO=_AMTpHMO;
MYVA=_AMTVA;
MYPRVI=_AMTPRVI;
MYPRVE=_AMTPRVE;
MYOOP=_AMTOOP;
MYDISC=_AMTDISC;
MYOTH=_AMTOTH;
MYPD=_AMTPD;
MYMA=_AMTMA;

IF TMPSET=1 THEN MYCARE=_AMTCARE/NUMLINKS;
IF TMPSET=1 THEN MYCAID=_AMTCAID/NUMLINKS;
IF TMPSET=1 THEN MYpHMO=_AMTpHMO/NUMLINKS;
IF TMPSET=1 THEN MYVA=_AMTVA/NUMLINKS;
IF TMPSET=1 THEN MYPRVI=_AMTPRVI/NUMLINKS;
IF TMPSET=1 THEN MYPRVE=_AMTPRVE/NUMLINKS;
IF TMPSET=1 THEN MYOOP=_AMTOOP/NUMLINKS;
IF TMPSET=1 THEN MYDISC=_AMTDISC/NUMLINKS;
IF TMPSET=1 THEN MYOTH=_AMTOTH/NUMLINKS;
IF TMPSET=1 THEN MYPD=_AMTPD/NUMLINKS;
IF TMPSET=1 THEN MYMA=_AMTMA/NUMLINKS;

IF TMPSET=1 THEN _AMTCARE=_AMTCARE/NUMLINKS;
IF TMPSET=1 THEN _AMTCAID=_AMTCAID/NUMLINKS;
IF TMPSET=1 THEN _AMTpHMO=_AMTpHMO/NUMLINKS;
IF TMPSET=1 THEN _AMTVA=_AMTVA/NUMLINKS;
IF TMPSET=1 THEN _AMTPRVI=_AMTPRVI/NUMLINKS;
IF TMPSET=1 THEN _AMTPRVE=_AMTPRVE/NUMLINKS;
IF TMPSET=1 THEN _AMTOOP=_AMTOOP/NUMLINKS;
IF TMPSET=1 THEN _AMTDISC=_AMTDISC/NUMLINKS;
IF TMPSET=1 THEN _AMTOTH=_AMTOTH/NUMLINKS;
IF TMPSET=1 THEN _AMTPD=_AMTPD/NUMLINKS;
IF TMPSET=1 THEN _AMTMA=_AMTMA/NUMLINKS;

RUN;
DATA X;
SET X;
IF _AMTCARE=. THEN MYCARE=0;
IF _AMTCAID=. THEN MYCAID=0;
IF _AMTpHMO=. THEN MYpHMO=0;
IF _AMTVA=. THEN MYVA=0;
IF _AMTPRVI=. THEN MYPRVI=0;
IF _AMTPRVE=. THEN MYPRVE=0;
IF _AMTOOP=. THEN MYOOP=0;
IF _AMTDISC=. THEN MYDISC=0;
IF _AMTOTH=. THEN MYOTH=0;
IF _AMTPD=. THEN MYPD=0;
IF _AMTMA=. THEN MYMA=0;

MYTOTAL=MYCARE+MYCAID+MYpHMO+MYVA+MYPRVI+MYPRVE+MYOOP+MYDISC+MYOTH +MYPD+MYMA;
RUN;
PROC SORT;
BY PMROID;
RUN;
*******************FACTOR CODE GOES HERE**********************;
DATA VECTORS;
SET X;
VCAID=' ';
VCARE=' ';
VDISC=' ';
VpHMO =' ';
VOOP =' ';
VOTH =' ';
VPRVE=' ';
VPRVI=' ';
VVA  =' ';
VPD  =' ';
VMA  =' ';

VCAID=PUT(_SOPCAID,1. );
VCARE=PUT(_SOPCARE,1. );
VDISC=PUT(_SOPDISC,1. );
VpHMO =PUT(_SOPpHMO ,1. );
VOOP =PUT(_SOPOOP ,1. );
VOTH =PUT(_SOPOTH ,1. );
VPRVE=PUT(_SOPPRVE,1. );
VPRVI=PUT(_SOPPRVI,1. );
VVA  =PUT(_SOPVA  ,1. );
VPD  =PUT(_SOPPD  ,1. );
VMA  =PUT(_SOPMA  ,1. );

*PAYVECT=VCAID||VCARE||VDISC||VpHMO||VOOP||VOTH||VPRVE||VPRVI||VVA;
PAYVECT2=VCAID||VCARE||VDISC||VpHMO||VOOP||VOTH||VPRVE||VPRVI||VVA||VPD||VMA;
RUN;
PROC SORT DATA=VECTORS;
BY PAYVECT2;
DATA PAYFACT;
SET MCBSDATA.PAYFACT2_&CurrYear;
 *INFILE PAYF;
 *INPUT PAYVECT $ 1-9 PAYFACT $ 10-10;
RUN;
PROC SORT DATA=PAYFACT;
BY PAYVECT2;
DATA TOG WHY;
MERGE VECTORS (IN=A) PAYFACT (IN=B);
BY PAYVECT2;
IF A;
IF B THEN OUTPUT TOG;
ELSE OUTPUT WHY;
RUN;

********************;
DATA Z;
SET TOG WHY;
IF _SOPCARE=2 THEN DO;
_SOPCARE=0;
_AMTCARE=0;
END;
RUN;
DATA A;
SET Z;
IF FIN_CHG NE . THEN DO;
BESTEST=FIN_CHG;
IF PAYFACT='R' AND EVPRICE<5 THEN FORCHECK=EVPRICE*&R_factor_LT5;
IF PAYFACT='R' AND EVPRICE>4.99 AND EVPRICE<20 THEN FORCHECK=EVPRICE* &R_factor_5_20;
IF PAYFACT='R' AND EVPRICE>19.99 THEN FORCHECK=EVPRICE*&R_factor_GT20;
IF PAYFACT='E' THEN FORCHECK=EVPRICE*&E_factor;
IF PAYFACT='H' THEN FORCHECK=EVPRICE*&H_factor;
IF PAYFACT='V' THEN FORCHECK=EVPRICE*&V_factor;
IF PAYFACT='C' THEN FORCHECK=(EVPRICE*&C_factor) + (&C_PLUS);
IF PAYFACT='O' THEN FORCHECK=(EVPRICE*&O_factor) + (&O_PLUS);
IF PAYFACT='P' THEN FORCHECK=EVPRICE*&P_factor;
IF PAYFACT='A' THEN FORCHECK=EVPRICE*&A_factor;

IF EVPRICE=. THEN DO;
IF PAYFACT='R' AND AVGEVPR<5 THEN FORCHECK=AVGEVPR*&R_factor_LT5;
IF PAYFACT='R' AND AVGEVPR>4.99 AND AVGEVPR<20 THEN FORCHECK=AVGEVPR*&R_factor_5_20;
IF PAYFACT='R' AND AVGEVPR>19.99 THEN FORCHECK=AVGEVPR*&R_factor_GT20;
IF PAYFACT='E' THEN FORCHECK=AVGEVPR*&E_factor;
IF PAYFACT='H' THEN FORCHECK=AVGEVPR*&H_factor;
IF PAYFACT='V' THEN FORCHECK=AVGEVPR*&V_factor;
IF PAYFACT='C' THEN FORCHECK=(AVGEVPR*&C_factor) + (&C_PLUS);
IF PAYFACT='O' THEN FORCHECK=(AVGEVPR*&O_factor) + (&O_PLUS);
IF PAYFACT='P' THEN FORCHECK=AVGEVPR*&P_factor;
IF PAYFACT='A' THEN FORCHECK=AVGEVPR*&A_factor;
END;
END;

IF FIN_CHG = . AND PAYFACT='R' AND EVPRICE<5 THEN DO;BESTEST=EVPRICE*&R_factor_LT5;END;
IF FIN_CHG = . AND PAYFACT='R' AND EVPRICE>4.99 AND EVPRICE<20 THEN DO;BESTEST=EVPRICE*&R_factor_5_20;END;
IF FIN_CHG = . AND PAYFACT='R' AND EVPRICE>19.99 THEN DO;BESTEST=EVPRICE*&R_factor_GT20;END;
IF FIN_CHG = . AND PAYFACT='E' THEN DO;BESTEST=EVPRICE*&E_factor;END;
IF FIN_CHG = . AND PAYFACT='H' THEN DO;BESTEST=EVPRICE*&H_factor;END;
IF FIN_CHG = . AND PAYFACT='V' THEN DO;BESTEST=EVPRICE*&V_factor;END;
IF FIN_CHG = . AND PAYFACT='C' THEN DO;BESTEST=(EVPRICE*&C_factor) + (&C_PLUS);END;
IF FIN_CHG = . AND PAYFACT='O' THEN DO;BESTEST=(EVPRICE*&O_factor) + (&O_PLUS);END;
IF FIN_CHG = . AND PAYFACT='P' THEN DO;BESTEST=EVPRICE*&P_factor;END;
IF FIN_CHG = . AND PAYFACT='A' THEN DO;BESTEST=EVPRICE*&A_factor;END;


*IF PAYFACT='C' THEN _TREIM=BESTEST*.789-MYDISC;
IF PAYFACT='C' THEN _TREIM=BESTEST;
*ELSE _TREIM=BESTEST-MYDISC;
ELSE _TREIM=BESTEST;
CHECK=BESTEST/FORCHECK;
BESTEST=ROUND(BESTEST,.01);
_TREIM=ROUND(_TREIM,.01);
MYTOTAL=ROUND(MYTOTAL,.01);
FORCHECK=ROUND(FORCHECK,.01);
***** THIS IS NEW FOR 94'***********;
IF _TREIM=. AND PAYFACT=' ' AND AVGEVPR NE .
AND EVPRICE=. THEN DO;
_TREIM=AVGEVPR;
_IMPSTAT=2;
END;
IF _TREIM=. AND PAYFACT=' ' AND EVPRICE NE . THEN DO;
_TREIM=EVPRICE;
_IMPSTAT=2;
END;
RUN;
DATA A;
SET A;
BESTEST=ROUND(BESTEST,.01);
_TREIM=ROUND(_TREIM,.01);
MYTOTAL=ROUND(MYTOTAL,.01);
FORCHECK=ROUND(FORCHECK,.01);
_AMTCARE=ROUND(_AMTCARE,.01);
AMTCARE_=ROUND(AMTCARE_,.01);
_AMTCAID=ROUND(_AMTCAID,.01);
AMTCAID_=ROUND(AMTCAID_,.01);
_AMTpHMO=ROUND(_AMTpHMO,.01);
AMTpHMO_=ROUND(AMTpHMO_,.01);
_AMTVA=ROUND(_AMTVA,.01);
AMTVA_=ROUND(AMTVA_,.01);
_AMTPRVE=ROUND(_AMTPRVE,.01);
AMTPRVE_=ROUND(AMTPRVE_,.01);
_AMTPRVI=ROUND(_AMTPRVI,.01);
AMTPRVI_=ROUND(AMTPRVI_,.01);
_AMTOOP=ROUND(_AMTOOP,.01);
AMTOOP_=ROUND(AMTOOP_,.01);
_AMTDISC=ROUND(_AMTDISC,.01);
AMTDISC_=ROUND(AMTDISC_,.01);
_AMTOTH=ROUND(_AMTOTH,.01);
AMTOTH_=ROUND(AMTOTH_,.01);
_AMTPD=ROUND(_AMTPD,.01);
AMTPD_=ROUND(AMTPD_,.01);
_AMTMA=ROUND(_AMTMA,.01);
AMTMA_=ROUND(AMTMA_,.01);

RELIABLE='M';
IF CHECK NE . THEN DO;
IF CHECK>=2 OR CHECK<=.5 THEN RELIABLE='N';
IF CHECK<2 AND CHECK>.5 THEN RELIABLE='Y';
END;
IF TOTALCHG >0 AND CHECK=. THEN RELIABLE='Y';
IF FIN_CHG=. AND _TREIM NE . THEN RELIABLE='Y';
IF _TREIM=. THEN RELIABLE='N';
RUN;

DATA B;
SET A;
IF _SOPCAID=3 OR _SOPCAID=4 OR _SOPpHMO=3 OR _SOPpHMO=4
OR _SOPVA=3 OR _SOPVA=4 OR _SOPOTH=3 OR _SOPOTH=4 
OR _SOPPD=3 OR _SOPPD=4 OR _SOPMA=3  OR _SOPMA=4 THEN DO;
  IF _SOPOOP NE 0 THEN DO;
    IF _TREIM NE .
    AND EVPRICE NE .  AND IMPDF=' ' AND IMPSTNG=' ' AND IMAMTNUM=.
    AND RELIABLE='N' AND _AMTOOP=BESTEST AND CHECK<.5 THEN DO;
      IF MYOOP=.25 OR MYOOP=.5 OR MYOOP=.75 OR MYOOP=1 OR MYOOP=1.25
      OR MYOOP=1.5 OR MYOOP=1.75 OR MYOOP=2 OR MYOOP=2.25 OR MYOOP=2.5
      OR MYOOP=2.75 OR MYOOP=3 OR MYOOP=3.25 OR MYOOP=3.5 OR MYOOP=3.75
      OR MYOOP=4 OR MYOOP=4.25 OR MYOOP=4.5 OR MYOOP=4.75 OR MYOOP=5
      OR MYOOP=5.25 OR MYOOP=5.5 OR MYOOP=5.75 OR MYOOP=6 OR MYOOP=6.25
      OR MYOOP=6.5 OR MYOOP=6.75 OR MYOOP=7 OR MYOOP=7.25 OR MYOOP=7.5
      OR MYOOP=7.75 OR MYOOP=8 OR MYOOP=8.25 OR MYOOP=8.5 OR MYOOP=8.75
      OR MYOOP=9 OR MYOOP=9.25 OR MYOOP=9.5 OR MYOOP=10 THEN DO;
        _TREIM=FORCHECK;
        RELIABLE='Y';
        TRY=1;
      END;
    END;
  END;
END;

IF _SOPPRVI=3 OR _SOPPRVI=4 OR _SOPPRVE = 3 OR _SOPPRVE=4 THEN DO;
  IF _SOPOOP NE 0 THEN DO;
    IF _TREIM NE .
    AND EVPRICE NE .  AND IMPDF=' ' AND IMPSTNG=' ' AND IMAMTNUM=.
    AND RELIABLE='N' AND _AMTOOP=BESTEST AND CHECK<.5 THEN DO;
      IF CHECK>0 AND CHECK<.30 THEN DO;
        _TREIM=FORCHECK;
        RELIABLE='Y';
        TRY=1;
      END;
    END;
  END;
END;
RUN;

DATA MCBSDATA.SOB100;
SET B;
IF _TREIM = . AND EVPRICE=. THEN DO;
IF _SOPCARE NE 0 THEN _AMTCARE=.;
IF _SOPCAID NE 0 THEN _AMTCAID=.;
IF _SOPpHMO NE 0 THEN _AMTpHMO=.;
IF _SOPVA NE 0 THEN _AMTVA=.;
IF _SOPPRVI NE 0 THEN _AMTPRVI=.;
IF _SOPPRVE NE 0 THEN _AMTPRVE=.;
IF _SOPOOP NE 0 THEN _AMTOOP=.;
IF _SOPDISC NE 0 THEN _AMTDISC=.;
IF _SOPOTH NE 0 THEN _AMTOTH=.;
IF _SOPPD NE 0 THEN _AMTPD=.;
IF _SOPMA NE 0 THEN _AMTMA=.;
END;

IF _TREIM = . AND EVPRICE=. AND PAYFACT='C' AND TMPSET   =1 THEN DO;_AMTOOP=AMTOOP_/NUMLINKS;END;
IF _TREIM = . AND EVPRICE=. AND PAYFACT='C' AND TMPSET NE 1 THEN DO;_AMTOOP=AMTOOP_;END;
IF _TREIM = . AND EVPRICE=. AND PAYFACT='H' AND TMPSET   =1 THEN DO;_AMTOOP=AMTOOP_/NUMLINKS;END;
IF _TREIM = . AND EVPRICE=. AND PAYFACT='H' AND TMPSET NE 1 THEN DO;_AMTOOP=AMTOOP_;END;
IF _TREIM = . AND EVPRICE=. AND PAYFACT='V' AND TMPSET   =1 THEN DO;_AMTOOP=AMTOOP_/NUMLINKS;END;
IF _TREIM = . AND EVPRICE=. AND PAYFACT='V' AND TMPSET NE 1 THEN DO;_AMTOOP=AMTOOP_;END;
IF _TREIM = . AND EVPRICE=. AND PAYFACT='P' AND TMPSET   =1 THEN DO;_AMTOOP=AMTOOP_/NUMLINKS;END;
IF _TREIM = . AND EVPRICE=. AND PAYFACT='P' AND TMPSET NE 1 THEN DO;_AMTOOP=AMTOOP_;END;
IF _TREIM = . AND EVPRICE=. AND PAYFACT='A' AND TMPSET   =1 THEN DO;_AMTOOP=AMTOOP_/NUMLINKS;END;
IF _TREIM = . AND EVPRICE=. AND PAYFACT='A' AND TMPSET NE 1 THEN DO;_AMTOOP=AMTOOP_;END;


IF TRY=1 THEN DO;
IF _SOPCARE NE 0 THEN _AMTCARE=.;
IF _SOPCAID NE 0 THEN _AMTCAID=.;
IF _SOPpHMO NE 0 THEN _AMTpHMO=.;
IF _SOPVA NE 0 THEN _AMTVA=.;
IF _SOPPRVI NE 0 THEN _AMTPRVI=.;
IF _SOPPRVE NE 0 THEN _AMTPRVE=.;
IF _SOPDISC NE 0 THEN _AMTDISC=.;
IF _SOPOTH NE 0 THEN _AMTOTH=.;
IF _SOPPD NE 0 THEN _AMTPD=.;
IF _SOPMA NE 0 THEN _AMTMA=.;
END;

IF _TREIM NE . THEN DO;
X= _AMTCARE+_AMTCAID+_AMTpHMO+_AMTVA+_AMTPRVE+_AMTPRVI+_AMTOOP+_AMTDISC+_AMTOTH +_AMTPD+_AMTMA;

IF FUZZ(X-_TREIM)>-.01 AND FUZZ(X-_TREIM)<.01 THEN CLOSED='Y';
ELSE CLOSED='N';
END;
Y=RELIABLE||CLOSED;
IF Y='YY' THEN _IMPSTAT=1;
IF Y='NY' THEN _IMPSTAT=3;
IF Y='YN' THEN _IMPSTAT=2;
IF Y='NN' THEN _IMPSTAT=2;
IF Y='N ' THEN _IMPSTAT=2;
IF Y='YY' AND CHECK<=.5 AND CHECK NE . THEN _IMPSTAT=3;
IF Y='YY' AND CHECK>=2 AND CHECK NE . THEN _IMPSTAT=3;
RUN;


