*-----------------------------------------------------------|
| THIS CODE CONCATENATES THE ONE TO ONE AND THE MULTICOST   |
| FILES SENT TO US FROM WESTAT AND ATTEMPTS TO DERIVE A     |
| THE PROPER METHODS TO ESTIMATE _TREIM REIMBURSMENT        |
| RAM 'RETAIL' GIVES US                                     |
| THE SOBRULES ARE AS FOLLOWS                               |
| 100=_NEWRECS=1_RECSPM=1_DIFPMS=1_PURCHPM=1                |
| 200=_NEWRECS=1 _RECSPM=1 _DIFPMS=1 _PURCHPM>1             |
| 300=_NEWRECS>1=_RECSPM>1 _DIFPMS=1 _PURCHPM>1             |
|400=_NEWRECS>1=_RECSPM>1=_DIFPMS>1=_PURCHPM>1              |
|450=_NEWRECS>1=_RECSPM>1=_DIFPMS>1 _PURCHPM>1 AND NE _NEWRECS|
| 500=_NEWRECS>_RECSPM                                      |
| 600=_NEWRECS=_RECSPM=_PURCHPM AND NE _DIFPMS              |
| 700=_NEWRECS=_RECSPM=_DIFPMS _PURCHPM=MISSING             |
| 800=ALL ARE MISSING                                       |
|-----------------------------------------------------------|
;


DATA DRUGS;
SET MCBSDATA.OUTCOMM_Y&CurrYear;
IF _NEWRECS>1 AND _RECSPM>1 AND _DIFPMS>1 AND _PURCHPM>1 AND
_NEWRECS=_RECSPM=_DIFPMS=_PURCHPM;
IF _SOPCARE=1 THEN DELETE;
SOB='400';
PMROID=BASEID||EVNTNUM||ROUND;
ID=BASEID||EVNTNUM||ROUND||UTILNUM;
AMTCARE_=_AMTCARE;
AMTCAID_=_AMTCAID;
AMTpHMO_=_AMTpHMO;
AMTVA_=_AMTVA;
AMTPRVE_=_AMTPRVE;
AMTPRVI_=_AMTPRVI;
AMTOOP_=_AMTOOP;
AMTDISC_=_AMTDISC;
AMTOTH_=_AMTOTH;
AMTPD_=_AMTPD;
AMTMA_=_AMTMA;

SOPCARE_=_SOPCARE;
SOPCAID_=_SOPCAID;
SOPpHMO_=_SOPpHMO;
SOPVA_=_SOPVA;
SOPPRVE_=_SOPPRVE;
SOPPRVI_=_SOPPRVI;
SOPOOP_=_SOPOOP;
SOPDISC_=_SOPDISC;
SOPOTH_=_SOPOTH;
SOPPD_=_SOPPD;
SOPMA_=_SOPMA;

PURCHPM_=_PURCHPM;
PMFORM_=PMFORMMC;
IF EVPRICE<.5  AND EVPRICE NE . THEN EVPRICE=.5;
MULTIPLE=BASEID||_NEWRECS||_RECSPM||_DIFPMS||_PURCHPM||COSTNUM;
RUN;
*determine multiple length for merging;
proc sql noprint;
select max(length(MULTIPLE))
into:lengthset
from DRUGS;
quit;
%put &lengthset;


DATA YYY;
SET DRUGS;
IF _NEWRECS=_RECSPM=_PURCHPM AND _NEWRECS NE _DIFPMS AND _DIFPMS NE 1;
SOB='600';
RUN;
DATA ZZZ;
SET DRUGS;
IF _NEWRECS=_RECSPM AND _DIFPMS NE _NEWRECS AND _DIFPMS NE _PURCHPM
AND _NEWRECS NE _PURCHPM AND _DIFPMS NE 1;
SOB='800';
RUN;
DATA COMDRUGS;
SET DRUGS YYY ZZZ;
RUN;
PROC SORT;
BY MULTIPLE;
RUN;
*;
*;
*;
DATA NUMSAME;
LENGTH TMPMUL $&lengthset..;
SET COMDRUGS;
BY MULTIPLE;
RETAIN TMPMUL '';
RETAIN TMPSET 0;
RETAIN COUNTER 0;
IF NUMLINKS>0 AND NUMSAME<0 THEN TMPSET=1;
IF NUMLINKS<0 AND NUMSAME>0 THEN TMPSET=.;
COUNTER=COUNTER+1;
IF FIRST.MULTIPLE THEN DO;
TMPMUL=MULTIPLE;
TMPSET=TMPSET;
COUNTER=1;
END;
RUN;
DATA B;
LENGTH TMPAAA $&lengthset..;
SET NUMSAME;
BY MULTIPLE;
RETAIN TMPAAA '';
RETAIN TMPNS 0;
IF TMPAAA=MULTIPLE THEN TMPNS=TMPNS+TMPSET;
IF FIRST.MULTIPLE THEN DO;
TMPAAA=MULTIPLE;
TMPNS=TMPSET;
END;
RUN;
DATA C(KEEP=COUNTER MULTIPLE TMPNS);
SET B;
BY MULTIPLE;
IF LAST.MULTIPLE;
RUN;
DATA A OUT;
MERGE COMDRUGS (IN=A) C (IN=B);
BY MULTIPLE;
IF A;
IF B THEN OUTPUT A;
ELSE OUTPUT OUT;
RUN;
DATA PRI(DROP=TMPMUL TMPAAA);
SET A;
IF COUNTER NE _PURCHPM THEN _PURCHPM=COUNTER;
IF TMPNS NE . AND TOTALCHG>0 THEN FIN_CHG=(TOTALCHG/_PURCHPM);
IF TMPNS=. AND TOTALCHG>0 THEN FIN_CHG=TOTALCHG;
IF TOTALCHG<0 THEN FIN_CHG=.;
RUN;
*;
*;
*;
PROC SORT;
BY PMROID;
RUN;
DATA TRYIT;
SET PRI;
BY PMROID;
RETAIN TMPFIN 0;
RETAIN TMPPMRO '             ';
IF PMROID=TMPPMRO THEN TMPFIN=FIN_CHG;
ELSE TMPFIN=FIN_CHG;
IF FIRST.PMROID THEN DO;
TMPFIN=FIN_CHG;
TMPPMRO=PMROID;
END;
RUN;
DATA X;
SET TRYIT;
MYCARE=_AMTCARE;
MYCAID=_AMTCAID;
MYpHMO=_AMTpHMO;
MYVA=_AMTVA;
MYPRVI=_AMTPRVI;
MYPRVE=_AMTPRVE;
MYOOP=_AMTOOP;
MYDISC=_AMTDISC;
MYOTH=_AMTOTH;
MYPD=_AMTPD;
MYMA=_AMTMA;

IF TMPNS NE . THEN MYCARE=_AMTCARE/_PURCHPM;
IF TMPNS NE . THEN MYCAID=_AMTCAID/_PURCHPM;
IF TMPNS NE . THEN MYpHMO=_AMTpHMO/_PURCHPM;
IF TMPNS NE . THEN MYVA=_AMTVA/_PURCHPM;
IF TMPNS NE . THEN MYPRVI=_AMTPRVI/_PURCHPM;
IF TMPNS NE . THEN MYPRVE=_AMTPRVE/_PURCHPM;
IF TMPNS NE . THEN MYOOP=_AMTOOP/_PURCHPM;
IF TMPNS NE . THEN MYDISC=_AMTDISC/_PURCHPM;
IF TMPNS NE . THEN MYOTH=_AMTOTH/_PURCHPM;
IF TMPNS NE . THEN MYPD=_AMTPD/_PURCHPM;
IF TMPNS NE . THEN MYMA=_AMTMA/_PURCHPM;

*IF TMPNS NE . THEN _AMTCARE=_AMTCARE/_PURCHPM;
*IF TMPNS NE . THEN _AMTCAID=_AMTCAID/_PURCHPM;
*IF TMPNS NE . THEN _AMTpHMO=_AMTpHMO/_PURCHPM;
*IF TMPNS NE . THEN _AMTVA=_AMTVA/_PURCHPM;
*IF TMPNS NE . THEN _AMTPRVI=_AMTPRVI/_PURCHPM;
*IF TMPNS NE . THEN _AMTPRVE=_AMTPRVE/_PURCHPM;
*IF TMPNS NE . THEN _AMTOOP=_AMTOOP/_PURCHPM;
*IF TMPNS NE . THEN _AMTDISC=_AMTDISC/_PURCHPM;
*IF TMPNS NE . THEN _AMTOTH=_AMTOTH/_PURCHPM;
*IF TMPNS NE . THEN _AMTPD=_AMTPD/_PURCHPM;
*IF TMPNS NE . THEN _AMTMA=_AMTMA/_PURCHPM;

RUN;
DATA X;
SET X;
IF _AMTCARE=. THEN MYCARE=0;
IF _AMTCAID=. THEN MYCAID=0;
IF _AMTpHMO=. THEN MYpHMO=0;
IF _AMTVA=. THEN MYVA=0;
IF _AMTPRVI=. THEN MYPRVI=0;
IF _AMTPRVE=. THEN MYPRVE=0;
IF _AMTOOP=. THEN MYOOP=0;
IF _AMTDISC=. THEN MYDISC=0;
IF _AMTOTH=. THEN MYOTH=0;
IF _AMTPD=. THEN MYPD=0;
IF _AMTMA=. THEN MYMA=0;

MYTOTAL=MYCARE+MYCAID+MYpHMO+MYVA+MYPRVI+MYPRVE+MYOOP+MYDISC+MYOTH +MYPD+MYMA;

RUN;
*******************FACTOR CODE GOES HERE**********************;
DATA VECTORS;
SET X;
VCAID=' ';
VCARE=' ';
VDISC=' ';
VpHMO =' ';
VOOP =' ';
VOTH =' ';
VPRVE=' ';
VPRVI=' ';
VVA  =' ';
VPD  =' ';
VMA  =' ';

VCAID=PUT(_SOPCAID,1. );
VCARE=PUT(_SOPCARE,1. );
VDISC=PUT(_SOPDISC,1. );
VpHMO =PUT(_SOPpHMO ,1. );
VOOP =PUT(_SOPOOP ,1. );
VOTH =PUT(_SOPOTH ,1. );
VPRVE=PUT(_SOPPRVE,1. );
VPRVI=PUT(_SOPPRVI,1. );
VVA  =PUT(_SOPVA  ,1. );
VPD  =PUT(_SOPPD  ,1. );
VMA  =PUT(_SOPMA  ,1. );

*PAYVECT=VCAID||VCARE||VDISC||VpHMO||VOOP||VOTH||VPRVE||VPRVI||VVA;
PAYVECT2=VCAID||VCARE||VDISC||VpHMO||VOOP||VOTH||VPRVE||VPRVI||VVA||VPD||VMA;
RUN;

PROC SORT DATA=VECTORS;
BY PAYVECT2;
DATA PAYFACT;
SET MCBSDATA.PAYFACT2_&CurrYear;
 *INFILE PAYF;
 *INPUT PAYVECT $ 1-9 PAYFACT $ 10-10;
RUN;

PROC SORT DATA=PAYFACT;
BY PAYVECT2;
DATA TOG WHY;
MERGE VECTORS (IN=A) PAYFACT (IN=B);
BY PAYVECT2;
IF A;
IF B THEN OUTPUT TOG;
ELSE OUTPUT WHY;
********************;
DATA Z;
SET TOG WHY;
IF _SOPCARE=2 THEN DO;
_SOPCARE=0;
_AMTCARE=0;
END;
RUN;
 
*FROM HERE TO END IS IDENTICLE OF ALL PROGRAMS;
PROC SORT;
BY BN;
RUN;
PROC SORT DATA=MCBSDATA.AVGEVPR_&CURRYEAR  OUT=AVG;
BY BN;
DATA Z JOKE;
MERGE Z (IN=A) AVG (IN=B);
BY BN;
IF A;
IF B THEN OUTPUT Z;
ELSE OUTPUT JOKE;
RUN;
 
DATA Z;
SET Z JOKE;
IF EVPRICE <.5 AND EVPRICE NE . THEN EVPRICE=.5;
RUN;
PROC SORT;
BY MULTIPLE;
RUN;
* THE NEXT SEVERAL LINES GIVES ME A PERCENT;
DATA PERCENT;
LENGTH TMPMULT $&lengthset..;
SET Z;
BY MULTIPLE;
RETAIN TMPEV 0;
RETAIN TMPEV2 0;
RETAIN TMPMULT '';
IF MULTIPLE=TMPMULT THEN DO; TMPEV=TMPEV+EVPRICE;
TMPEV2=TMPEV2+AVGEVPR;END;
IF FIRST.MULTIPLE THEN DO;
TMPEV=EVPRICE;
TMPEV2=AVGEVPR;
TMPMULT=MULTIPLE;
END;
RUN;
DATA PERCENT(KEEP=MULTIPLE TMPEV TMPEV2);
SET PERCENT;
BY MULTIPLE;
IF LAST.MULTIPLE;
RUN;
DATA Z;
MERGE Z (IN=A) PERCENT (IN=B);
BY MULTIPLE;
IF A THEN OUTPUT Z;
RUN;
DATA Z;
SET Z;
PERCENT=EVPRICE/TMPEV;
PERCENT2=AVGEVPR/TMPEV2;
RUN;
DATA Z;
SET Z;
IF PERCENT>0 THEN DO;
PERCENT2=.;
TMPEV2=.;
END;
IF PERCENT NE . AND TOTALCHG>0 AND TMPNS NE . THEN DO; FIN_CHG=PERCENT*TOTALCHG; END;
IF PERCENT NE . AND TOTALCHG>0 AND TMPNS=. THEN DO; FIN_CHG=TOTALCHG; END;
IF PERCENT2 NE . AND TOTALCHG>0 AND TMPNS NE . THEN DO; FIN_CHG=PERCENT2*TOTALCHG; END;
IF PERCENT2 NE . AND TOTALCHG>0 AND TMPNS=. THEN DO; FIN_CHG=TOTALCHG; END;
RUN;
DATA A;
SET Z;
IF FIN_CHG NE . THEN DO;
BESTEST=FIN_CHG;
IF PAYFACT='R' AND EVPRICE<5 THEN FORCHECK=EVPRICE*&R_factor_LT5;
IF PAYFACT='R' AND EVPRICE>4.99 AND EVPRICE<20 THEN FORCHECK=EVPRICE*&R_factor_5_20;
IF PAYFACT='R' AND EVPRICE>19.99 THEN FORCHECK=EVPRICE*&R_factor_GT20;
IF PAYFACT='E' THEN FORCHECK=EVPRICE*&E_factor;
IF PAYFACT='H' THEN FORCHECK=EVPRICE*&H_factor;
IF PAYFACT='V' THEN FORCHECK=EVPRICE*&V_factor;
IF PAYFACT='C' THEN FORCHECK=(EVPRICE*&C_factor) + (&C_PLUS);
IF PAYFACT='O' THEN FORCHECK=(EVPRICE*&O_factor) + (&O_PLUS);
IF PAYFACT='P' THEN FORCHECK=EVPRICE*&P_factor;
IF PAYFACT='A' THEN FORCHECK=EVPRICE*&A_factor;

IF EVPRICE=. THEN DO;
IF PAYFACT='R' AND AVGEVPR<5 THEN FORCHECK=AVGEVPR*&R_factor_LT5;
IF PAYFACT='R' AND AVGEVPR>4.99 AND AVGEVPR<20 THEN FORCHECK=AVGEVPR*&R_factor_5_20;
IF PAYFACT='R' AND AVGEVPR>19.99 THEN FORCHECK=AVGEVPR*&R_factor_GT20;
IF PAYFACT='E' THEN FORCHECK=AVGEVPR*&E_factor;
IF PAYFACT='H' THEN FORCHECK=AVGEVPR*&H_factor;
IF PAYFACT='V' THEN FORCHECK=AVGEVPR*&V_factor;
IF PAYFACT='C' THEN FORCHECK=(AVGEVPR*&C_factor) + (&C_PLUS);
IF PAYFACT='O' THEN FORCHECK=(AVGEVPR*&O_factor) + (&O_PLUS);
IF PAYFACT='P' THEN FORCHECK=AVGEVPR*&P_factor;
IF PAYFACT='A' THEN FORCHECK=AVGEVPR*&A_factor;
END;
END;

IF FIN_CHG = . AND PAYFACT='R' AND EVPRICE<5                    THEN DO;BESTEST=EVPRICE*&R_factor_LT5;END;
IF FIN_CHG = . AND PAYFACT='R' AND EVPRICE>4.99 AND EVPRICE<20 THEN DO;BESTEST=EVPRICE*&R_factor_5_20;END;
IF FIN_CHG = . AND PAYFACT='R' AND EVPRICE>19.99               THEN DO;BESTEST=EVPRICE*&R_factor_GT20;END;
IF FIN_CHG = . AND PAYFACT='E' THEN DO;BESTEST=EVPRICE*&E_factor;END;
IF FIN_CHG = . AND PAYFACT='H' THEN DO;BESTEST=EVPRICE*&H_factor;END;
IF FIN_CHG = . AND PAYFACT='V' THEN DO;BESTEST=EVPRICE*&V_factor;END;
IF FIN_CHG = . AND PAYFACT='C' THEN DO;BESTEST=(EVPRICE*&C_factor) + (&C_PLUS);END;
IF FIN_CHG = . AND PAYFACT='O' THEN DO;BESTEST=(EVPRICE*&O_factor) + (&O_PLUS);END;
IF FIN_CHG = . AND PAYFACT='P' THEN DO;BESTEST=EVPRICE*&P_factor;END;
IF FIN_CHG = . AND PAYFACT='A' THEN DO;BESTEST=EVPRICE*&A_factor;END;

*IF PAYFACT='C' THEN _TREIM=BESTEST*.789;
IF PAYFACT='C' THEN _TREIM=BESTEST;
ELSE _TREIM=BESTEST;
CHECK=BESTEST/FORCHECK;
RUN;

DATA A;
SET A;
BESTEST=ROUND(BESTEST,.01);
_TREIM=ROUND(_TREIM,.01);
MYTOTAL=ROUND(MYTOTAL,.01);
FORCHECK=ROUND(FORCHECK,.01);
_AMTCARE=ROUND(_AMTCARE,.01);
AMTCARE_=ROUND(AMTCARE_,.01);
_AMTCAID=ROUND(_AMTCAID,.01);
AMTCAID_=ROUND(AMTCAID_,.01);
_AMTpHMO=ROUND(_AMTpHMO,.01);
AMTpHMO_=ROUND(AMTpHMO_,.01);
_AMTVA=ROUND(_AMTVA,.01);
AMTVA_=ROUND(AMTVA_,.01);
_AMTPRVE=ROUND(_AMTPRVE,.01);
AMTPRVE_=ROUND(AMTPRVE_,.01);
_AMTPRVI=ROUND(_AMTPRVI,.01);
AMTPRVI_=ROUND(AMTPRVI_,.01);
_AMTOOP=ROUND(_AMTOOP,.01);
AMTOOP_=ROUND(AMTOOP_,.01);
_AMTDISC=ROUND(_AMTDISC,.01);
AMTDISC_=ROUND(AMTDISC_,.01);
_AMTOTH=ROUND(_AMTOTH,.01);
AMTOTH_=ROUND(AMTOTH_,.01);
_AMTPD=ROUND(_AMTPD,.01);
AMTPD_=ROUND(AMTPD_,.01);
_AMTMA=ROUND(_AMTMA,.01);
AMTMA_=ROUND(AMTMA_,.01);

RELIABLE='M';
IF CHECK NE . THEN DO;
IF CHECK>=2 OR CHECK<=.5 THEN RELIABLE='N';
IF CHECK<2 AND CHECK>.5 THEN RELIABLE='Y';
END;
IF TOTALCHG >0 AND CHECK=. THEN RELIABLE='Y';
IF FIN_CHG=. AND _TREIM NE . THEN RELIABLE='Y';
IF _TREIM=. THEN RELIABLE='N';
RUN;

DATA B;
SET A;
IF _SOPCAID=3 OR _SOPCAID=4 OR _SOPpHMO=3 OR _SOPpHMO=4
OR _SOPVA=3 OR _SOPVA=4 OR _SOPOTH=3 OR _SOPOTH=4 
OR _SOPPD=3 OR _SOPPD=4 OR _SOPMA=3  OR _SOPMA=4 THEN DO;
  IF _SOPOOP NE 0 THEN DO;
    IF _TREIM NE .
    AND EVPRICE NE .  AND IMPDF=' ' AND IMPSTNG=' ' AND IMAMTNUM=.
    AND RELIABLE='N' AND _AMTOOP=BESTEST AND CHECK<.5 THEN DO;
      IF MYOOP=.25 OR MYOOP=.5 OR MYOOP=.75 OR MYOOP=1 OR MYOOP=1.25
      OR MYOOP=1.5 OR MYOOP=1.75 OR MYOOP=2 OR MYOOP=2.25 OR MYOOP=2.5
      OR MYOOP=2.75 OR MYOOP=3 OR MYOOP=3.25 OR MYOOP=3.5 OR MYOOP=3.75
      OR MYOOP=4 OR MYOOP=4.25 OR MYOOP=4.5 OR MYOOP=4.75 OR MYOOP=5
      OR MYOOP=5.25 OR MYOOP=5.5 OR MYOOP=5.75 OR MYOOP=6 OR MYOOP=6.25
      OR MYOOP=6.5 OR MYOOP=6.75 OR MYOOP=7 OR MYOOP=7.25 OR MYOOP=7.5
      OR MYOOP=7.75 OR MYOOP=8 OR MYOOP=8.25 OR MYOOP=8.5 OR MYOOP=8.75
      OR MYOOP=9 OR MYOOP=9.25 OR MYOOP=9.5 OR MYOOP=10 THEN DO;
        _TREIM=FORCHECK;
        RELIABLE='Y';
        TRY=1;
      END;
    END;
  END;
END;

IF _SOPPRVI=3 OR _SOPPRVI=4 OR _SOPPRVE = 3 OR _SOPPRVE=4 THEN DO;
  IF _SOPOOP NE 0 THEN DO;
    IF _TREIM NE .
    AND EVPRICE NE .  AND IMPDF=' ' AND IMPSTNG=' ' AND IMAMTNUM=.
    AND RELIABLE='N' AND _AMTOOP=BESTEST AND CHECK<.5 THEN DO;
      IF CHECK>0 AND CHECK<.30 THEN DO;
        _TREIM=FORCHECK;
        RELIABLE='Y';
        TRY=1;
      END;
    END;
  END;
END;

RUN;
PROC SORT;
BY MULTIPLE;
RUN;
DATA CHANGE(KEEP=TMPMUL MULTIPLE TRY);
LENGTH TMPMUL $&lengthset..;
SET B;
BY MULTIPLE;
RETAIN TMPMUL '';
IF TRY=. THEN DELETE;
IF FIRST.MULTIPLE THEN DO;
TMPMUL=MULTIPLE;
END;
RUN;
DATA LAST(KEEP=MULTIPLE CHANGED);
SET CHANGE;
BY MULTIPLE;
IF LAST.MULTIPLE;
RUN;
DATA LAST;
SET LAST;
_CHNGIT=1;
RUN;
DATA B OUT;
MERGE B (IN=A) LAST (IN=B);
BY MULTIPLE;
IF A;
IF B THEN OUTPUT B;
ELSE OUTPUT OUT;
RUN;
DATA B;
SET B OUT;
IF _CHNGIT=1 AND EVPRICE NE . AND FORCHECK NE . THEN DO;
_TREIM=FORCHECK;
RELIABLE='Y';
END;
IF _TREIM=. AND EVPRICE=. AND PAYFACT NE 'C' AND PAYFACT NE 'H' AND PAYFACT NE 'V' 
AND PAYFACT NE 'P' AND PAYFACT NE 'A' THEN DO;
 IF _SOPCARE NE 0 THEN _AMTCARE=.;
 IF _SOPCAID NE 0 THEN _AMTCAID=.;
 IF _SOPpHMO NE 0 THEN _AMTpHMO=.;
 IF _SOPVA NE 0 THEN _AMTVA=.;
 IF _SOPPRVI NE 0 THEN _AMTPRVI=.;
 IF _SOPPRVE NE 0 THEN _AMTPRVE=.;
 IF _SOPOOP NE 0 THEN _AMTOOP=.;
 IF _SOPDISC NE 0 THEN _AMTDISC=.;
 IF _SOPOTH NE 0 THEN _AMTOTH=.;
 IF _SOPPD NE 0 THEN _AMTPD=.;
 IF _SOPMA NE 0 THEN _AMTMA=.;
END;

IF _TREIM=. AND EVPRICE=. THEN DO;
  IF PAYFACT='V' OR PAYFACT='H' OR PAYFACT='C' AND PAYFACT NE 'P' AND PAYFACT NE 'A' THEN DO;
    IF TMPNS NE . THEN DO;
      IF _SOPCARE NE 0 THEN _AMTCARE=.;
      IF _SOPCAID NE 0 THEN _AMTCAID=.;
      IF _SOPpHMO NE 0 THEN _AMTpHMO=.;
      IF _SOPVA NE 0 THEN _AMTVA=.;
      IF _SOPPRVI NE 0 THEN _AMTPRVI=.;
      IF _SOPPRVE NE 0 THEN _AMTPRVE=.;
      IF _SOPDISC NE 0 THEN _AMTDISC=.;
      IF _SOPOTH NE 0 THEN _AMTOTH=.;
      IF _SOPPD NE 0 THEN _AMTPD=.;
      IF _SOPMA NE 0 THEN _AMTMA=.;
      IF _SOPOOP=1 THEN DO; IF TOTALCHG<0 THEN _AMTOOP=AMTOOP_/PURCHPM_; END;
      IF _SOPOOP=1 THEN DO; IF TOTALCHG>0 THEN _AMTOOP=AMTOOP_/_PURCHPM; END;
    END;
  END;
END;


IF _TREIM=. AND EVPRICE=. THEN DO;
  IF PAYFACT='V' OR PAYFACT='H' OR PAYFACT='C' OR PAYFACT='P' OR PAYFACT='A' THEN DO;
    IF TMPNS=. THEN DO;
      IF _SOPCARE NE 0 THEN _AMTCARE=.;
      IF _SOPCAID NE 0 THEN _AMTCAID=.;
      IF _SOPpHMO NE 0 THEN _AMTpHMO=.;
      IF _SOPVA NE 0 THEN _AMTVA=.;
      IF _SOPPRVI NE 0 THEN _AMTPRVI=.;
      IF _SOPPRVE NE 0 THEN _AMTPRVE=.;
      IF _SOPDISC NE 0 THEN _AMTDISC=.;
      IF _SOPOTH NE 0 THEN _AMTOTH=.;
      IF _SOPOOP=1 THEN _AMTOOP=AMTOOP_;
      IF _SOPPD NE 0 THEN _AMTPD=.;
      IF _SOPMA NE 0 THEN _AMTMA=.;
    END;
  END;
END;

RUN;
DATA MCBSDATA.SOB400;
SET B;
 
* NEW AS OF 02/06/00;
 
IF (PERCENT=. AND PERCENT2=.)
AND TOTALCHG NE . AND TOTALCHG>0 AND TMPNS NE . THEN DO;
 IF _AMTCARE=AMTCARE_ AND _SOPCARE=1 THEN _AMTCARE=AMTCARE_/_PURCHPM;
 IF _AMTCAID=AMTCAID_ AND _SOPCAID=1 THEN _AMTCAID=AMTCAID_/_PURCHPM;
 IF _AMTpHMO=AMTpHMO_ AND _SOPpHMO=1 THEN _AMTpHMO=AMTpHMO_/_PURCHPM;
 IF _AMTVA=AMTVA_ AND _SOPVA=1 THEN _AMTVA=AMTVA_/_PURCHPM;
 IF _AMTPRVE=AMTPRVE_ AND _SOPPRVE=1 THEN _AMTPRVE=AMTPRVE_/_PURCHPM;
 IF _AMTPRVI=AMTPRVI_ AND _SOPPRVI=1 THEN _AMTPRVI=AMTPRVI_/_PURCHPM;
 IF _AMTOOP=AMTOOP_ AND _SOPOOP=1 THEN _AMTOOP=AMTOOP_/_PURCHPM;
 IF _AMTDISC=AMTDISC_ AND _SOPDISC=1 THEN _AMTDISC=AMTDISC_/_PURCHPM;
 IF _AMTOTH=AMTOTH_ AND _SOPOTH=1 THEN _AMTOTH=AMTOTH_/_PURCHPM;
 IF _AMTPD=AMTPD_   AND _SOPPD=1  THEN _AMTPD =AMTPD_/_PURCHPM;
 IF _AMTMA=AMTMA_   AND _SOPMA=1  THEN _AMTMA =AMTMA_/_PURCHPM;
 CHNG02='YES';
END;

IF (PERCENT=. AND PERCENT2=.)
AND TOTALCHG NE . AND TOTALCHG <0 AND TMPNS NE . THEN DO;
 IF _AMTCARE=AMTCARE_ AND _SOPCARE=1 THEN _AMTCARE=AMTCARE_/_PURCHPM;
 IF _AMTCAID=AMTCAID_ AND _SOPCAID=1 THEN _AMTCAID=AMTCAID_/_PURCHPM;
 IF _AMTpHMO=AMTpHMO_ AND _SOPpHMO=1 THEN _AMTpHMO=AMTpHMO_/_PURCHPM;
 IF _AMTVA=AMTVA_ AND _SOPVA=1 THEN _AMTVA=AMTVA_/_PURCHPM;
 IF _AMTPRVE=AMTPRVE_ AND _SOPPRVE=1 THEN _AMTPRVE=AMTPRVE_/_PURCHPM;
 IF _AMTPRVI=AMTPRVI_ AND _SOPPRVI=1 THEN _AMTPRVI=AMTPRVI_/_PURCHPM;
 IF _AMTOOP=AMTOOP_ AND _SOPOOP=1 THEN _AMTOOP=AMTOOP_/_PURCHPM;
 IF _AMTDISC=AMTDISC_ AND _SOPDISC=1 THEN _AMTDISC=AMTDISC_/_PURCHPM;
 IF _AMTOTH=AMTOTH_ AND _SOPOTH=1 THEN _AMTOTH=AMTOTH_/_PURCHPM;
 IF _AMTPD=AMTPD_ AND _SOPPD=1 THEN _AMTPD=AMTPD_/_PURCHPM;
 IF _AMTMA=AMTMA_ AND _SOPMA=1 THEN _AMTMA=AMTMA_/_PURCHPM;
 CHNG02='YES';
END;

IF _CHNGIT=1 THEN DO;
  IF EVPRICE=. THEN DO;_TREIM=.;_IMPSTAT=2;END;
  IF _SOPCARE NE 0 THEN _AMTCARE=.;
  IF _SOPCAID NE 0 THEN _AMTCAID=.;
  IF _SOPpHMO NE 0 THEN _AMTpHMO=.;
  IF _SOPVA NE 0 THEN _AMTVA=.;
  IF _SOPPRVI NE 0 THEN _AMTPRVI=.;
  IF _SOPPRVE NE 0 THEN _AMTPRVE=.;
  IF _SOPOOP NE 0 THEN DO;
    IF TOTALCHG<0 THEN DO;
      IF TMPNS NE . THEN _AMTOOP=AMTOOP_/PURCHPM_;
      IF TMPNS=. THEN _AMTOOP=AMTOOP_;
    END;
  END;
  IF _SOPOOP NE 0 THEN DO;
    IF TOTALCHG>0 THEN DO;
      IF TMPNS NE . THEN _AMTOOP=AMTOOP_/_PURCHPM;
      IF TMPNS=. THEN _AMTOOP=AMTOOP_;
    END;
  END;
  IF _SOPDISC NE 0 THEN _AMTDISC=.;
  IF _SOPOTH NE 0 THEN _AMTOTH=.;
  IF _SOPPD NE 0 THEN _AMTPD=.;
  IF _SOPMA NE 0 THEN _AMTMA=.;
END;

IF PERCENT NE . AND TOTALCHG>0 AND TMPNS NE . THEN DO;
_AMTCAID=PERCENT*AMTCAID_;
_AMTpHMO=PERCENT*AMTpHMO_;
_AMTVA=PERCENT*AMTVA_;
_AMTPRVI=PERCENT*AMTPRVI_;
_AMTPRVE=PERCENT*AMTPRVE_;
_AMTOOP=PERCENT*AMTOOP_;
_AMTDISC=PERCENT*AMTDISC_;
_AMTOTH=PERCENT*AMTOTH_;
_AMTPD=PERCENT*AMTPD_;
_AMTMA=PERCENT*AMTMA_;
END;

IF PERCENT NE . AND TOTALCHG>0 AND TMPNS=. THEN DO;
_AMTCAID=AMTCAID_;
_AMTpHMO=AMTpHMO_;
_AMTVA=AMTVA_;
_AMTPRVI=AMTPRVI_;
_AMTPRVE=AMTPRVE_;
_AMTOOP=AMTOOP_;
_AMTDISC=AMTDISC_;
_AMTOTH=AMTOTH_;
_AMTPD=AMTPD_;
_AMTMA=AMTMA_;
END;

IF PERCENT NE . AND TOTALCHG<0 AND TMPNS NE . THEN DO;
_AMTCAID=PERCENT*AMTCAID_;
_AMTpHMO=PERCENT*AMTpHMO_;
_AMTVA=PERCENT*AMTVA_;
_AMTPRVI=PERCENT*AMTPRVI_;
_AMTPRVE=PERCENT*AMTPRVE_;
_AMTOOP=PERCENT*AMTOOP_;
_AMTDISC=PERCENT*AMTDISC_;
_AMTOTH=PERCENT*AMTOTH_;
_AMTPD=PERCENT*AMTPD_;
_AMTMA=PERCENT*AMTMA_;
END;

IF PERCENT NE . AND TOTALCHG<0 AND TMPNS=. THEN DO;
_AMTCAID=AMTCAID_;
_AMTpHMO=AMTpHMO_;
_AMTVA=AMTVA_;
_AMTPRVI=AMTPRVI_;
_AMTPRVE=AMTPRVE_;
_AMTOOP=AMTOOP_;
_AMTDISC=AMTDISC_;
_AMTOTH=AMTOTH_;
_AMTPD=AMTPD_;
_AMTMA=AMTMA_;
END;

IF PERCENT2 NE . AND TOTALCHG>0 AND TMPNS NE . THEN DO;
 IF PAYFACT='C' THEN _AMTOOP=AMTOOP_/_PURCHPM;
 IF PAYFACT='H' THEN _AMTOOP=AMTOOP_/_PURCHPM;
 IF PAYFACT='V' THEN _AMTOOP=AMTOOP_/_PURCHPM;
 IF PAYFACT='P' THEN _AMTOOP=AMTOOP_/_PURCHPM;
 IF PAYFACT='A' THEN _AMTOOP=AMTOOP_/_PURCHPM;
 IF PAYFACT NE 'C' AND PAYFACT NE 'H' AND PAYFACT NE 'V' 
 AND PAYFACT NE 'P' AND PAYFACT NE 'A'  THEN DO;   _AMTOOP=.; END;
END;


IF PERCENT2 NE . AND TOTALCHG<0 AND TMPNS NE . THEN DO;
 IF PAYFACT='C' THEN _AMTOOP=AMTOOP_/PURCHPM_;
 IF PAYFACT='H' THEN _AMTOOP=AMTOOP_/PURCHPM_;
 IF PAYFACT='V' THEN _AMTOOP=AMTOOP_/PURCHPM_;
 IF PAYFACT='P' THEN _AMTOOP=AMTOOP_/PURCHPM_;
 IF PAYFACT='A' THEN _AMTOOP=AMTOOP_/PURCHPM_;
 IF PAYFACT NE 'C' AND PAYFACT NE 'H' AND PAYFACT NE 'V'  
 AND PAYFACT NE 'P' AND PAYFACT NE 'A' THEN DO; _AMTOOP=.; END;
END;


IF PERCENT2 NE . AND TOTALCHG>0 AND TMPNS=. THEN DO;
 IF PAYFACT='C' THEN _AMTOOP=AMTOOP_;
 IF PAYFACT='H' THEN _AMTOOP=AMTOOP_;
 IF PAYFACT='V' THEN _AMTOOP=AMTOOP_;
 IF PAYFACT='P' THEN _AMTOOP=AMTOOP_;
 IF PAYFACT='A' THEN _AMTOOP=AMTOOP_;
 IF PAYFACT NE 'C' AND PAYFACT NE 'H' AND PAYFACT NE 'V'  
 AND PAYFACT NE 'P' AND PAYFACT NE 'A' THEN DO; _AMTOOP=.; END;
END;


IF PERCENT2 NE . AND TOTALCHG<0 AND TMPNS=. THEN DO;
 IF PAYFACT='C' THEN _AMTOOP=AMTOOP_;
 IF PAYFACT='H' THEN _AMTOOP=AMTOOP_;
 IF PAYFACT='V' THEN _AMTOOP=AMTOOP_;
 IF PAYFACT='P' THEN _AMTOOP=AMTOOP_;
 IF PAYFACT='A' THEN _AMTOOP=AMTOOP_;
 IF PAYFACT NE 'C' AND PAYFACT NE 'H' AND PAYFACT NE 'V' 
 AND PAYFACT NE 'P' AND PAYFACT NE 'A' THEN DO; _AMTOOP=.; END;
END;


IF PERCENT2 NE . THEN DO;
IF _SOPCARE NE 0 THEN _AMTCARE=.;
IF _SOPCAID NE 0 THEN _AMTCAID=.;
IF _SOPpHMO NE 0 THEN _AMTpHMO=.;
IF _SOPVA NE 0 THEN _AMTVA=.;
IF _SOPPRVI NE 0 THEN _AMTPRVI=.;
IF _SOPPRVE NE 0 THEN _AMTPRVE=.;
IF _SOPDISC NE 0 THEN _AMTDISC=.;
IF _SOPOTH NE 0 THEN _AMTOTH=.;
IF _SOPPD NE 0 THEN _AMTPD=.;
IF _SOPMA NE 0 THEN _AMTMA=.;
END;

IF _TREIM NE . THEN DO;
X= _AMTCARE+_AMTCAID+_AMTpHMO+_AMTVA+_AMTPRVE+_AMTPRVI+_AMTOOP+_AMTDISC+_AMTOTH   +_AMTPD+_AMTMA;
IF FUZZ(X-_TREIM)>-.01 AND FUZZ(X-_TREIM)<.01 THEN CLOSED='Y';
ELSE CLOSED='N';
END;

Y=RELIABLE||CLOSED;
IF Y='YY' THEN _IMPSTAT=1;
IF Y='NY' THEN _IMPSTAT=3;
IF Y='YN' THEN _IMPSTAT=2;
IF Y='NN' THEN _IMPSTAT=2;
IF Y='N ' THEN _IMPSTAT=2;
IF Y='YY' AND CHECK<=.5 AND CHECK NE . THEN _IMPSTAT=3;
IF Y='YY' AND CHECK>=2 AND CHECK NE . THEN _IMPSTAT=3;
RUN;

